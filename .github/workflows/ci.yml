name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: CI-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: '1.20'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Build
      run: go build -v ./...

  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.50

  unit-test:
    name: Unit Test
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Test
      run: go test -v ./...

  integration-test:
    name: Integration Test
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    services:
      backstage:
        image: roadiehq/community-backstage-image
        ports:
          - 7000
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Run entities example
      env:
        BACKSTAGE_BASE_URL: http://localhost:${{ job.services.backstage.ports[7000] }}/api
      run: |
        sleep 30
        go run ./examples/entities/main.go
    - name: Run locations example
      env:
        BACKSTAGE_BASE_URL: http://localhost:${{ job.services.backstage.ports[7000] }}/api
      run: |
        sleep 30
        go run ./examples/locations/main.go
